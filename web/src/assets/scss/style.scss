@import './vars';

//reset & base
* {
  box-sizing: border-box;
  outline: none;
}

html {
  
  font-size: 13px;
}

body {
  margin: 0;
  font-family: Arial, Helvetica, sans-serif;
  line-height: 1.2em;
  background-color: #f1f1f1;
}

a {
  color: #333;
}

p{
  line-height: 1.8rem;
}

// width,height
.w-100{
  width: 100%;
}
.h-100{
  height: 100%;
}

// text-overflow
.text-ellipsis{
  display: inline-block;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

//flex
.flex {
  display: flex;
}

.flex-column {
  flex-direction: column;
}

.flex-wrap{
  flex-wrap: wrap;
}

.flex-1{
  flex: 1;
}

// button
.btn{
  border: none;
  border-radius: 0.1538rem;
  font-size: map-get($font-sizes, 'sm') * $base-font-size;
  padding: 0.2rem 0.6rem;
  &.btn-lg{
    display: flex;
    justify-content: center;
    align-items: center;
    i{
      color: map-get($colors , 'primary' );
      font-weight: bold;
      font-size: 1.5rem;
      margin: 0 0.3125rem;
    }
    background: map-get($colors, 'btn-bg');
    border: 1px solid map-get($colors , 'btn-bd');
    padding: .8rem 0;
    font-size: 1.1rem;
  }
}

//nav
.nav{
  display: flex;
  justify-content: space-around;

  .nav-item{
    border-bottom: 3px solid transparent;
    padding-bottom: 0.2rem;
    &.active{
      color: map-get($colors,'primary');
      border-bottom-color: map-get($colors,'primary');
    }
  }
  &.nav-reverse{
    .nav-item{
      color: map-get($colors, 'white');
      &.active{
        border-bottom-color: map-get($colors,'white');
      }
    }
  }
}

//sprite
.sprite{
  background: url('~assets/images/sprite/sprite.png') no-repeat 0 0;
  background-size: 28.8462rem;
  display: inline-block;
  &.sprite-news{
    width: 1.7692rem;
    height: 1.5385rem;
    background-position: 63.546% 15.517%;
  }
  &.sprite-story{
    width: 1.7692rem;
    height: 1.5385rem;
    background-position: 90.483% 15.614%;
  }
  &.sprite-arrow{
    width: 0.7692rem;
    height: 0.7692rem;
    background-position: 38.577% 52.076%;
  }
}

@each $colorKey, $color in $colors {
  .text-#{$colorKey} {
    color: $color;
  }

  .bg-#{$colorKey} {
    background-color: $color;
  }
}

//text
@each $var in (left, center, right) {
  .text-#{$var} {
    text-align: $var !important;
  }
}


@each $sizeKey,
$size in $font-sizes {
  .fs-#{$sizeKey} {
    font-size: $size * $base-font-size !important;
  }
}

@each $flexKey,
$flexVal in $flex-jc {
  .jc-#{$flexKey} {
    justify-content: $flexVal;
  }
}

@each $flexKey,
$flexVal in $flex-ai {
  .ai-#{$flexKey} {
    align-items: $flexVal;
  }
}

@each $typeKey,
$type in $spacing-types {

  // m/p - 1/2/3/4/5 
  @each $sizeKey,
  $size in $spacing-sizes {
    .#{$typeKey}-#{$sizeKey} {
      #{$type}: $size * $spacing-base-size;
    }
  }

  // m/px - 1/2/3/4/5
  @each $sizeKey,
  $size in $spacing-sizes {
    .#{$typeKey}x-#{$sizeKey} {
      #{$type}-left: $size * $spacing-base-size;
      #{$type}-right: $size * $spacing-base-size;
    }
  }

  // m/py - 1/2/3/4/5
  @each $sizeKey,
  $size in $spacing-sizes {
    .#{$typeKey}y-#{$sizeKey} {
      #{$type}-top: $size * $spacing-base-size;
      #{$type}-bottom: $size * $spacing-base-size;
    }
  }

  // m/p t/r/b/l - 1/2/3/4/5
  @each $directionKey,
  $direction in $spacing-directions {

    @each $sizeKey,
    $size in $spacing-sizes {
      .#{$typeKey}#{$directionKey}-#{$sizeKey} {
        #{$type}-#{$direction}: $size * $spacing-base-size;
      }
    }
  }
}

@each $dir in (top,right,bottom,left) {
  .bd-#{$dir}{
    border-#{$dir}: 1px solid $border-color;
  }
}